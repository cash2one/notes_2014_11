#+TITLE: tc2_front日志的PB化

* 基础信息
** 相关人员
| 业务方接口人 | 李斌(libin02)   |
| UDW接口人    | 陈涛(chentao02) |
| PB接口人     | 仲毅(zhongyi01) |

* 审核Proto
审核链接：
http://szwg-dt-pb02.szwg01.baidu.com/?m=Protobuf&a=Diff&from=approval&approval_id=307

** tc2_front.proto
#+BEGIN_SRC cpp
package b2log; 
// @description: 这个枚举列出产品ID，ID一旦分配出去就不会更改。我们会根据入库的情况不断增加新的产品 
enum ProductID { 
    PS                   = 0; // 网页搜索 
    TIEBA                = 1; // 百度贴吧 
    IKNOW                = 2; // 百度知道 
    MAP                  = 3; // 百度地图 
    WISE                 = 4; // 移动搜索部 
} 
// @description: 用户的访问端信息，用以区分用户的访问模式 
enum ClientType { 
    UNKNOWN             = 0; // 未知端 
    PC_WEB             = 1; //  
    WAP_COMMON       = 2; //  
    WAP_SMART         = 3; //  
    PAD_WEB             = 4; //  
    PAD_APP             = 5; //  
    PC_CLENT         = 6; //  
    MOBILE_APP         = 7; //  
    SDK              = 8; //  
    API                = 9; //  
} 

// @description:  
message BaiduLog { 
    // 产品的ID值，每个产品对应一个 
    required ProductID product                    = 1; 

    // 处理的时间戳，精确到ms 
    required uint64 timestamp                     = 2; 

    // 标识用户action的唯一的logid。logid主要用处将处理逻辑能够串联起来。我们强烈建议one action one logid。如果上游传入logid，本地将不要再重复生成，而是将上游的logid设置本字段中。 
    required uint64 logid                         = 3; 

    // 用户的IP的信息，如果是采用点分十进制，请转换为无符号整数 
    optional fixed32 user_ip                      = 8; 

    // 如果是HTTP服务，获得GET/POST的请求串，url为完整的的带有域名.(UTF-8) 
    optional string url                           = 9; 

    // 如果是标准HTTP服务，获得客户端的UserAgent 
    optional string user_agent                    = 10; 

    // 如果是标准HTTP服务，获得本次请求的Referrer 
    optional string referrer                      = 11; 

    // 如果是标准HTTP服务，获得本次请求的cookie，完整的cookie串 
    optional string cookie                        = 12; 

    // 如果是标准HTTP服务，获得本次返回的状态码 
    optional uint32 http_status                   = 13; 

    // 查询词，对应于语音注释为语音转换之后的query词。 
    optional string query                         = 14; 

    // 移动设备端应用的唯一标识信息 android: deviceid|imei逆序 ios: md5（mac地址） wp: deviceid_unique_id  
    //optional string wise_cuid                     = 15;

    // 用户本次行为的名称，用于区分不同的动作 
    //optional string action_name                   = 16;

    // pid， 产品号。例如百科或者知道。对于vioce产品的pid值为1024； 
    //optional uint32 pid                           = 17;

    // 是否是百度内部IP，--由IP自动生成 
    //optional bool is_internal_ip                  = 18;

    // 是否是spider，--由IP自动生成 
    //optional bool is_spider                       = 19;

    // spider信息，--由IP自动生成 
    //optional string spider_detail                 = 20;

    // IP所在国家，--由IP自动生成 
    //optional string country                       = 21;

    // IP所在省份，--由IP自动生成 
    //optional string province                      = 22;

    // IP所在城市，--由IP自动生成 
    //optional string city                          = 23;

    // 用户的访问端信息，用以区分用户的访问模式，是partition字段 
    optional ClientType client_type               = 24; 

    //------------------------------------------------------------------ 
    //The ID less than 128 is reserved for common fields. 
    //------------------------------------------------------------------ 

    //your schema fields add here... 
    // 服务类型，可取值:transcoder, webapp, surf, rpc, vcodeproxy  
    optional string serv_ty = 201; 

    // 请求实际使用的http method 
    // 可取值: GET,POST,FILL,FEED,UNKNOWN 
    optional string method = 202; 

    // 抓取资源的类型 
    // 可取值:TYPE_PAGE,TYPE_PAGE_EXT,TYPE_IMAGE,TYPE_LARGE_FILE,TYPE_LARGE_FILE_FRAGMENT,TYPE_UNKNOWN,TYPE_NULL 
    optional string ctype = 203; 

    // 是否命中typeinfo cache 
    // 可取值 0/1 
    optional int32 hit_typeinfo = 204; 

    // 是否命中cache 
    // 可取值 0/1 
    optional int32 hit_cache = 205; 

    // 是否写入cache 
    // 可取值 0/1 
    optional int32 add_cache = 206; 

    // 是否命中pagedb 
    // 可取值 0/1 
    optional int32 hit_pagedb = 207; 

    // 是否写入pagedb 
    // 可取值 0/1 
    optional int32 add_pagedb =208; 

    // 是否成功抓取 
    // 可取值 0/1 
    optional int32 succ_crawler = 209; 

    // 大文件下载是否需要分片 
    // 可取值 0/1 
    optional int32 need_fragment = 210; 

    // 是否为大文件下载最后一个分片 
    // 可取值 0/1 
    optional int32 end_fragment = 211; 

    // 大文件下载分片编号 
    optional int32 fragidx = 212; 

    // 是否为分片上传 
    // 可取值 0/1 
    optional int32 b_upload_fragment = 213; 

    // 大文件上传分片编号 
    optional int32 upload_fragment_index = 214; 

    // 是否为大文件 
    // 可取值 0/1 
    optional int32 superfile = 215; 

    // 清除分片标志 
    // 可取值 0/1 
    optional int32 delfrag = 216; 

    // 分机房抓取，是否命中针对ip的机房配置文件 
    // 可取值 0/1 
    optional int32 b_hit_ip_conf = 217; 

    // 分机房抓取，是否命中针对域名的机房配置文件 
    // 可取值 0/1 
    optional int32 b_hit_domain_conf = 218; 

    // 分机房抓取，是否命中针对url的机房配置文件 
    // 可取值 0/1 
    optional int32 b_hit_url_conf = 219; 

    // 是否使用单ip出口抓取 
    // 可取值 0/1 
    optional int32 single_ip_room = 220; 

    // 是否命中dnscache 
    // 可取值 0/1 
    optional int32 hit_dnscache = 221; 

    // 抓取出口机房 
    optional int32 room_type = 222; 

    // 是否监控请求 
    // 可取值 0/1 
    optional int32 monitor = 223; 

    // 整个业务是否处理成功 
    // 可取值 0/1 
    optional int32 succ = 224; 

    // cache控制策略验证是否成功 
    // 可取值 0/1 
    optional int32 b_cache_control_validate_succ = 225; 

    // 是否cache惰性跟新 
    // 可取值 0/1 
    optional int32 b_cache_renew_start = 226; 

    // 惰性更新是否成功 
    // 可取值 0/1 
    optional int32 b_cache_renew_succ = 227; 

    // 通过返回304，节省的流量 
    optional int32 return_304_saved_lenth = 228; 

    // 客户端请求是否携带Last-Modified-Since 
    optional int32 client_have_last_modified = 229; 

    // 客户端请求是否携带etag 
    optional int32 client_have_etag = 230; 

    // 第三方是否返回了last-modified 
    optional int32 server_return_last_modified = 231; 

    // 是否成功压缩页面 
    optional int32 b_succ_compresshtml = 232; 

    // 资源原始大小 
    optional int32 body_src_length = 233; 

    // 压缩后的资源大小 
    optional int32 body_compressed_length = 234; 

    // 抓取返回的http状态码 
    optional int32 scode = 235; 

    // 客户类型 
    // 可取值：BROWSER，APP，PA，UNKNOWN 
    optional string client_type_str = 236; 

    // wormhole session id 
    optional uint32 wsid = 237; 

    // 是否对结构化数据惰性更新 
    optional int32 lazy_renew_sp = 238; 

    // 是否为appui直接要求跳转请求(为了打日志) 
    optional int32 b_appui_redirect = 239; 

    // 本次交互的sessionid 
    optional uint32 x_tc_session_id = 240; 

    // tc客户类型  
    // 可取值:browser, app, pa
    optional string x_tc_client_type = 241; 

    // 是否使用广告过滤 
    optional int32 adblock = 242; 

    // 第三方是否返回了set_cookie 
    optional int32 server_return_set_cookie = 243; 

    // 是否降级 
    optional int32 use_demotion = 244; 

    // 总的处理时间 
    optional int32 total_proc_time = 245; 

    // 写返回时间 
    optional int32 write_done_time = 246; 

    // 与readtypeinfo交互时间 
    // total表示与后端的总交互时间;connect表示与后端的连接时间;write表示写后端的时间;read表示读后端的时间 
    optional int32 pf_readtypeinfo_total = 401; 
    optional int32 pf_readtypeinfo_connect = 402; 
    optional int32 pf_readtypeinfo_write = 403; 
    optional int32 pf_readtypeinfo_read = 404; 

    // 与writetypeinfo交互时间 
    optional int32 pf_writetypeinfo_total = 405; 
    optional int32 pf_writetypeinfo_connect = 406; 
    optional int32 pf_writetypeinfo_write = 407; 
    optional int32 pf_writetypeinfo_read = 408; 

    // 与readcache交互时间 
    optional int32 pf_readcache_total = 409; 
    optional int32 pf_readcache_connect = 410; 
    optional int32 pf_readcache_write = 411; 
    optional int32 pf_readcache_read = 412; 

    // 与writecache交互时间 
    optional int32 pf_writecache_total = 413; 
    optional int32 pf_writecache_connect = 414; 
    optional int32 pf_writecache_write = 415; 
    optional int32 pf_writecache_read = 416; 

    // 与smartlayout交互时间 
    optional int32 pf_smartlayout_total = 417; 
    optional int32 pf_smartlayout_connect = 418; 
    optional int32 pf_smartlayout_write = 419; 
    optional int32 pf_smartlayout_read = 420; 

    // 与smartlayout_rpcquery交互时间 
    optional int32 pf_smartlayout_rpcquery_total = 421; 
    optional int32 pf_smartlayout_rpcquery_connect = 422; 
    optional int32 pf_smartlayout_rpcquery_write = 423; 
    optional int32 pf_smartlayout_rpcquery_read = 424; 

    // 与timgcore交互时间 
    optional int32 pf_timgcore_total = 425; 
    optional int32 pf_timgcore_connect = 426; 
    optional int32 pf_timgcore_write = 427; 
    optional int32 pf_timgcore_read = 428; 

    // 与streamcrawler交互时间 
    optional int32 pf_streamcrawler_total = 429; 
    optional int32 pf_streamcrawler_connect = 430; 
    optional int32 pf_streamcrawler_write = 431; 
    optional int32 pf_streamcrawler_read = 432; 

    // 与createsuperfile交互时间 
    optional int32 pf_createsuperfile_total = 433; 
    optional int32 pf_createsuperfile_connect = 434; 
    optional int32 pf_createsuperfile_write = 435; 
    optional int32 pf_createsuperfile_read = 436; 

    // 与deletefragment交互时间 
    optional int32 pf_deletefragment_total = 437; 
    optional int32 pf_deletefragment_connect = 438; 
    optional int32 pf_deletefragment_write = 439; 
    optional int32 pf_deletefragment_read = 440; 

    // 与tckernel交互时间 
    optional int32 pf_tckernel_total = 441; 
    optional int32 pf_tckernel_connect = 442; 
    optional int32 pf_tckernel_write = 443; 
    optional int32 pf_tckernel_read = 444; 

    // 与dnscache交互时间 
    optional int32 pf_dnscache_total = 445; 
    optional int32 pf_dnscache_connect = 446; 
    optional int32 pf_dnscache_write = 447; 
    optional int32 pf_dnscache_read = 448; 
} 

// 以下信息用于Minos的传输配置，用户无需关心，如确定不使用Minos，也可以删除 
message MetaData { 
    optional uint64 log_module_id  = 1 [default = 130]; 
    optional string log_name       = 2 [default = "tcfront"]; 
    optional string product_name   = 3 [default = ""]; 
} 
#+END_SRC
** Logging Schema
*** REQUEST类型
#+BEGIN_SRC xml
    <REQUEST type="module" delimiter=" ">
        <log_level type="string"/>
        <date type="string"/>
        <time1 type="string"/>
        <space type="string"/>
        <front type="string"/>
        <star type="string"/>
        <pid type="uint64"/>
        <info type="string"/>
        <ip type="string" kv_delimiter=":"/>
        <http_request_line type="record" surrounded_delimiter='""' delimiter=" " extend_record_str="true">
            <method type="string"/>
            <resource type="record" delimiter="?" >
                <url_path type="string"/>
                <arg1 type="record" auto_key="true" flag="repeated" repeated_delimiter="&amp;" delimiter="=">
                    <key1 type="string"/>
                    <value1 type="string"/>
                </arg1>
            </resource>
        </http_request_line>
        <time type="string" kv_delimiter=":"/>
        <len type="uint64" kv_delimiter=":"/>
        <referer type="string" kv_delimiter=":" end_flag_str="bdmprm"/>
        <bdmprm type="string" kv_delimiter=":" end_flag_str="page_to"/>
        <page_total type="uint64" kv_delimiter=":"/>
        <submittype type="string" kv_delimiter=":"/>
        <bsuccess type="string" kv_delimiter=":" end_flag_str="x-forward"/>
        <x_forwarded_for key="x-forwarded-for" type="string" kv_delimiter=":" end_flag_str="calling_li"/>
        <calling_line_id type="string" kv_delimiter=":" end_flag_str="ua"/>
        <ua type="string" kv_delimiter=":" end_flag_str="cookie"/>
        <cookie type="record" kv_delimiter=":" extend_record_str="true">
            <cookie_value type="record" auto_key="true" flag="repeated" repeated_delimiter=";" delimiter="=" erase_blank_before_key="true">
                <key2 type="string"/>
                <value2 type="string"/>
            </cookie_value>
        </cookie>
    </REQUEST>
#+END_SRC

*** PERFORM类型
#+BEGIN_SRC xml
    <PERFORM type="module" delimiter=" ">
        <log_level type="string"/>
        <date type="string"/>
        <time1 type="string"/>
        <space type="string"/>
        <front type="string"/>
        <star type="string"/>
        <pid type="uint64"/>
        <info type="string"/>
        <ip type="string" kv_delimiter=":"/>
        <vendor type="string" kv_delimiter=":" end_flag_str="model"/>
        <model type="string" kv_delimiter=":" end_flag_str="device_os"/>
        <device_os type="string" kv_delimiter=":" end_flag_str="device_os_"/>
        <device_os_version type="string" kv_delimiter=":" end_flag_str="mobile_br"/>
        <mobile_browser type="string" kv_delimiter=":" end_flag_str="mobile_brow"/>
        <mobile_browser_version type="string" kv_delimiter=":"/>
        <ua type="string" kv_delimiter=":" end_flag_str="tianwangid"/>
        <tianwangid type="string" kv_delimiter=":"/>
        <hit_cache type="string" kv_delimiter=":"/>
        <hit_dnscache type="string" kv_delimiter=":"/>
        <hit_ip_room_conf type="string" kv_delimiter=":"/>
        <hit_domain_room_conf type="string" kv_delimiter=":"/>
        <room_type type="string" kv_delimiter=":"/>
        <suc_crawl type="string" kv_delimiter=":"/>
        <suc_sf type="string" kv_delimiter=":"/>
        <web type="string" kv_delimiter=":"/>
        <news type="string" kv_delimiter=":"/>
        <req_hotword type="string" kv_delimiter=":"/>
        <hotword_succ type="string" kv_delimiter=":"/>
        <novelcache type="string" kv_delimiter=":"/>
        <rltnovel type="string" kv_delimiter=":"/>
        <tckernel_retry type="string" kv_delimiter=":"/>
        <total type="string" kv_delimiter=":"/>
        <cache_pro type="string" kv_delimiter=":"/>
        <dnscache_pro type="string" kv_delimiter=":"/>
        <novelcache_pro type="string" kv_delimiter=":"/>
        <crawl_pro type="string" kv_delimiter=":"/>
        <web_pro type="string" kv_delimiter=":"/>
        <exlink type="string" kv_delimiter=":"/>
        <submit type="string" kv_delimiter=":"/>
        <sf_pro type="string" kv_delimiter=":"/>
        <core_pro type="string" kv_delimiter=":"/>
        <news_pro type="string" kv_delimiter=":"/>
        <hot_word type="string" kv_delimiter=":"/>
        <rltnovel_pro type="string" kv_delimiter=":"/>
        <writecookie type="string" kv_delimiter=":"/>
        <appuiservice_pro type="string" kv_delimiter=":"/>
        <uri type="string" kv_delimiter=":"/>
        <redirect_url type="string" kv_delimiter=":"/>
        <return_code type="string" kv_delimiter=":"/>
        <appui_code type="string" kv_delimiter=":"/>
        <time type="string" kv_delimiter=":"/>
        <submittype type="string" kv_delimiter=":"/>
        <video_type type="string" kv_delimiter=":"/>
        <adv_phone type="string" kv_delimiter=":"/>
        <page_merge type="string" kv_delimiter=":"/>
    </PERFORM>
#+END_SRC


* 进展
** <2014-03-27 四>
Hi, ALL

更新一下进展。

本周一完成了tc2_front.proto的初审。今天下午和李斌与下游UDW陈涛一起审核了该proto，
审核结果是 *除了要新增calling_line_id外，该proto已经能满足UDW的需求* 。

为了避免后续的返工，我下周还会请下游其他重要用户包括 *点击调权* （春宇）和
*UFlow* （志清）一起再作一次审核。
