#+TITLE: Master多机化的详细设计

* Master多机化的监控和统计
看来，用Redis将会成为一种明智之举了。

各个Master同时往Redis实时更新传输流信息，任意一台Master都可以访问Redis来获取全体
或单个传输流的监控数据，也就是说，任意一台Master都可以通过http-rpc模块来对外暴露
HTTP接口。

可以仅仅把Redis当做一个 *缓存* ，而不是监控与统计数据的唯一存储。这样即使Redis不
可用了，任意一个Master也可以查询汇总所有的传输流信息来返回给调用者。这样做会带来
额外的开发量，就拿获取某产品线所有传输流信息这个接口来说，不仅要实现对Redis的访问，
还要实现Redis访问失败后，轮询所有的Master获取其管理的所有该产品线传输流信息的逻辑。
但是这个开发量目前看来并不大，我可以先把慢速访问（非Redis方式）给实现了，再把带缓
存快速访问（Redis）方式实现。




