* 80% - 20%理论在Vim中的体现
** 文件间的跳转

| 跳转类型                | 快捷健            | 相关插件                              |
|-------------------------+-------------------+---------------------------------------|
| .h与.cpp之间            | <leader>a         | a.vim                                 |
| .h/.cpp与_test.cpp之间  | 需要我完善 TODO   | 拟作at.vim                            |
| 在include语句上直接跳转 | gf                | gf是Vim本身支持的，但是需要预设path   |
| 跳转到上一处            | C-o               | Vim本身支持                           |
| 跳转到下一处            | C-i               | Vim本身支持                           |
| 跳转到变量/函数的定义处 | C-]/:cs find g    | ctags/cscope工具，我用得还不够好 TODO |
| 跳到指定文件（通用） | 我要继续改进 TODO | NERD_tree.vim/lookupfiles.vim         |
* Vim文本对象
使用 *:help text-objects* ，查看帮助，发现了Vim的这个强大功能。Vim对于 *文本编
辑* 这个领域的问题模型做了很完善的抽象，所以它如此的锋利。

** 用法示例
清空括号内的所有内容：
#+BEGIN_EXAMPLE
di) 
#+END_EXAMPLE

选中光标所在的单词：
#+BEGIN_EXAMPLE
viw
#+END_EXAMPLE

* Buffer（寄存器）与复制粘贴
在Vim中执行复制后，会把内容复制到一个buffer中。Vim会维护者多个buffer，即使退出
Vim，这些buffer依然存在。buffer分为两类：
| 类别             | 数目        | 复制操作举例                   | 粘贴操作举例                          |
|------------------+-------------+--------------------------------+---------------------------------------|
| 默认buffer       | 空，1个      | yy，复制当前行到默认buffer中   | p，粘贴默认buffer的内容到当前位置     |
| Numbered Buffers | 0-9，共10个 | ""yy，将当前复制到buffer 2中   | "2p，将buffer 2中的内容粘贴到当前位置 |
| Named Buffers    | a-z，共23个 | "a7yy，将第7行复制到buffer a中 | "ap，将buffer a中的内容复制到当前位置 |

*注意* ：Numbered Buffers是个循环队列，每次执行复制到默认buffer后，该队列会整体右移，
而buffer 0会被默认buffer占据。

Vim提供了一个 *非常有用的查看当前各个buffer的指令* ：
#+BEGIN_EXAMPLE
:reg
#+END_EXAMPLE

执行结果如下：

[[./img/vim-1.png]]

* 小贴土
** 禁止鼠标选中时自动转换为选择模式
#+begin_example
" Mouse, please leave terminal alone.                                                                  
set mouse=
#+end_example
